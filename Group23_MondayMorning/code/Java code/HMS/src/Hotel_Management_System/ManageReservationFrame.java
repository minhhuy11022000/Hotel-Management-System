/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Hotel_Management_System;

import javax.swing.*;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.util.Date;

/**
 *
 * @author Admin
 */
public class ManageReservationFrame extends javax.swing.JFrame {
    ConnectDb conn = new ConnectDb();
    PreparedStatement pst = null;
    ResultSet rs = null;
    Reservation res = new Reservation();
    Room room = new Room();
    /**
     * Creates new form ManageReservation
     */
    public ManageReservationFrame() {
        initComponents();
        setLocationRelativeTo(null);
        res.showTable(jTableReservation);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldResId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldRoomNo = new javax.swing.JTextField();
        btnRemoveRes = new javax.swing.JButton();
        btnClearField = new javax.swing.JButton();
        btnEditRes = new javax.swing.JButton();
        btnAddRes = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jTextFieldCusId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDateInChooser = new com.toedter.calendar.JDateChooser();
        jDateOutChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableReservation = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(148, 124, 176));

        jPanel3.setBackground(new java.awt.Color(200, 247, 197));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Rerservation Management");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addGap(222, 222, 222))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID:");

        jTextFieldResId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldResIdActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Customer Id:");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Room No:");

        jTextFieldRoomNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRoomNoActionPerformed(evt);
            }
        });

        btnRemoveRes.setBackground(new java.awt.Color(255, 255, 255));
        btnRemoveRes.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        btnRemoveRes.setText("Remove");
        btnRemoveRes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveResActionPerformed(evt);
            }
        });

        btnClearField.setBackground(new java.awt.Color(255, 0, 0));
        btnClearField.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        btnClearField.setForeground(new java.awt.Color(255, 255, 255));
        btnClearField.setText("Clear field");
        btnClearField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFieldActionPerformed(evt);
            }
        });

        btnEditRes.setBackground(new java.awt.Color(255, 255, 255));
        btnEditRes.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        btnEditRes.setText("Edit");
        btnEditRes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditResActionPerformed(evt);
            }
        });

        btnAddRes.setBackground(new java.awt.Color(255, 255, 255));
        btnAddRes.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        btnAddRes.setText("Add");
        btnAddRes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddResActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(255, 255, 51));
        btnRefresh.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(0, 0, 0));
        btnRefresh.setText("Refresh");
        btnRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jTextFieldCusId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCusIdActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Date in:");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Date out:");

        jDateInChooser.setBackground(new java.awt.Color(148, 124, 176));
        jDateInChooser.setDateFormatString("dd-MM-yyyy");

        jDateOutChooser.setBackground(new java.awt.Color(148, 124, 176));
        jDateOutChooser.setDateFormatString("dd-MM-yyyy");

        jTableReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reservation ID", "Customer ID", "Room number", "Date In", "Date Out"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableReservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableReservationMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableReservation);

        jToggleButton1.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton1.setText("Back");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClearField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(btnAddRes, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldResId)
                                    .addComponent(jTextFieldCusId)
                                    .addComponent(jTextFieldRoomNo)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jDateInChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jDateOutChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnEditRes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRemoveRes)))))
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldResId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldCusId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jDateInChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jDateOutChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddRes)
                            .addComponent(btnRemoveRes)
                            .addComponent(btnEditRes))
                        .addGap(18, 18, 18)
                        .addComponent(btnClearField)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefresh))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCusIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCusIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCusIdActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableReservation.getModel();
        model.setRowCount(0);

        res.showTable(jTableReservation);
        jTextFieldResId.setText("");
        jTextFieldRoomNo.setText("");
        jTextFieldCusId.setText("");
        jDateInChooser.setDate(new Date());
        jDateOutChooser.setDate(new Date());

    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnAddResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddResActionPerformed
        // TODO add your handling code here:
        if(jTextFieldCusId.getText().equals("") || jTextFieldRoomNo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Room Number and Customer Id must be filled");
        }
        else{
            try{
                String insertQuery = "INSERT INTO Reservation(CustomerId, RoomNo, Date_in, Date_out) VALUES(?,?,?,?)";
                pst = conn.connectDb().prepareStatement(insertQuery);

                pst.setString(1, jTextFieldCusId.getText());
                pst.setString(2, jTextFieldRoomNo.getText());
                
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String dateIn = dateFormat.format(jDateInChooser.getDate());
                String dateOut = dateFormat.format(jDateOutChooser.getDate());
                String today = dateFormat.format(new Date());
                
                Date din = dateFormat.parse(dateIn);
                Date dout = dateFormat.parse(dateOut);
                Date td = dateFormat.parse(today);
                
                pst.setString(3, dateIn.toString());
                pst.setString(4, dateOut.toString());
                
                // if the day in is before or not equal today
                if(!(din.after(td) || din.equals(td))){
                    JOptionPane.showMessageDialog(null, "Date in must be equal or after today", "Notification", JOptionPane.WARNING_MESSAGE);
                }
                //if the day out is before or not equal day in
                else if(!(dout.after(din) || dout.equals(din))){
                    JOptionPane.showMessageDialog(null, "Date out must be after day in", "Notification", JOptionPane.WARNING_MESSAGE);
                }else{
                    if(room.isRoomReserved(jTextFieldRoomNo.getText()).equals("No")){
                        room.setRoomToReserved(jTextFieldRoomNo.getText(), "Yes");
                        JOptionPane.showMessageDialog(null, "Reservation added successfully");
                        pst.executeUpdate();
                    }else{
                        JOptionPane.showMessageDialog(null, "This room is already reserved", "Notification", JOptionPane.WARNING_MESSAGE);
                    }
                }
                                                                          
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }finally{
                try{
                    pst.close();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }

    }//GEN-LAST:event_btnAddResActionPerformed

    private void btnEditResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditResActionPerformed
        if(jTextFieldCusId.getText().equals("") || jTextFieldRoomNo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Room Number and Customer Id must be filled");
        }
        else{
            try{
                int row = jTableReservation.getSelectedRow();
                String value = jTableReservation.getModel().getValueAt(row, 0).toString();
                String editQuery = "UPDATE Reservation SET CustomerId=?,RoomNo=?,Date_in=?,Date_out=? WHERE ID="+value;

                pst = conn.connectDb().prepareStatement(editQuery);
                pst.setString(1, jTextFieldCusId.getText());
                pst.setString(2, jTextFieldRoomNo.getText());
                
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String dateIn = dateFormat.format(jDateInChooser.getDate());
                String dateOut = dateFormat.format(jDateOutChooser.getDate());
                String today = dateFormat.format(new Date());
                
                Date din = dateFormat.parse(dateIn);
                Date dout = dateFormat.parse(dateOut);
                Date td = dateFormat.parse(today);
                
                pst.setString(3, dateIn);
                pst.setString(4, dateOut);
                
                 // if the day in is before or not equal today
                if(!(din.after(td) || din.equals(td))){
                    JOptionPane.showMessageDialog(null, "Date in must be equal or after today", "Notification", JOptionPane.WARNING_MESSAGE);
                }
                //if the day out is before or not equal day in
                else if(!(dout.after(din) || dout.equals(din))){
                    JOptionPane.showMessageDialog(null, "Date out must be after day in", "Notification", JOptionPane.WARNING_MESSAGE);
                }else{
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Edited successfully");
                }

                
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e);
            }catch(NullPointerException e){
                JOptionPane.showMessageDialog(rootPane, e.getMessage() + "Select Day In & Out","Data Error", JOptionPane.ERROR_MESSAGE);
            } catch (ParseException ex) {
                Logger.getLogger(ManageReservationFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                try{
                    pst.close();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_btnEditResActionPerformed

    private void btnClearFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFieldActionPerformed
        // TODO add your handling code here:
        jTextFieldResId.setText("");
        jTextFieldRoomNo.setText("");
        jTextFieldCusId.setText("");
        jDateInChooser.setDate(new Date());
        jDateOutChooser.setDate(new Date());
    }//GEN-LAST:event_btnClearFieldActionPerformed

    private void btnRemoveResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveResActionPerformed
        // TODO add your handling code here:
        try{
            String deleteQuery = "DELETE FROM Reservation WHERE ID="+jTextFieldResId.getText();
            pst = conn.connectDb().prepareStatement(deleteQuery);
            room.setRoomToReserved(jTextFieldRoomNo.getText(), "No");
            pst.executeUpdate();
            
            
            JOptionPane.showMessageDialog(null, "Deleted successfully");
            
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }finally{
                    try{
                        pst.close();
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }
                }

    }//GEN-LAST:event_btnRemoveResActionPerformed

    private void jTextFieldRoomNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRoomNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRoomNoActionPerformed

    private void jTextFieldResIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldResIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldResIdActionPerformed

    private void jTableReservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableReservationMouseClicked
        // TODO add your handling code here:
        int row = jTableReservation.getSelectedRow();
        TableModel model = jTableReservation.getModel();
        jTextFieldResId.setText(model.getValueAt(row, 0).toString());
        jTextFieldCusId.setText(model.getValueAt(row, 1).toString());
        jTextFieldRoomNo.setText(model.getValueAt(row, 2).toString());
        
        try {
            //display the date on the jDateChooser
            Date dateIn =  new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(row, 3).toString());
            jDateInChooser.setDate(dateIn);
            
            Date dateOut = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(row, 4).toString());
            jDateOutChooser.setDate(dateOut);
        } catch (ParseException ex) {
            Logger.getLogger(ManageReservationFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_jTableReservationMouseClicked

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        MainFrame mainFrame = new MainFrame();
        mainFrame.setVisible(true);
        mainFrame.pack();
        this.dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageReservationFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRes;
    private javax.swing.JButton btnClearField;
    private javax.swing.JButton btnEditRes;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemoveRes;
    private com.toedter.calendar.JDateChooser jDateInChooser;
    private com.toedter.calendar.JDateChooser jDateOutChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableReservation;
    private javax.swing.JTextField jTextFieldCusId;
    private javax.swing.JTextField jTextFieldResId;
    private javax.swing.JTextField jTextFieldRoomNo;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
